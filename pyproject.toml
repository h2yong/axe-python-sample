[project]
name = "celery-funboost-sample"
version = "0.1.0"
description = "Add your description here"
requires-python = ">=3.11"
dependencies = [
    "celery>=5.5.3",
    "eventlet>=0.40.3",
    "funboost>=50.3",
    "gevent>=25.9.1",
    "redis>=6.4.0",
    "textblob>=0.19.0",
    "dash>=3.2.0",
    "gradio>=5.49.1",
    "reflex>=0.8.12",
    "streamlit>=1.49.1",
    "streamlit-chat>=0.1.1",
    "numpy>=2.3.3",
    "pillow>=11.3.0",
    "transformers>=4.57.0",
]

[dependency-groups]
dev = ["celery-types==0.23.0", "pytest>=8.4.2", "pytest-cov>=7.0.0", "pandas-stubs==2.3.2.250926"]

[[tool.uv.index]]
url = "https://mirrors.cloud.tencent.com/pypi/simple/"
default = true

[tool.pytest.ini_options]
addopts = "-lqs"
filterwarnings = [
    # By default, all warnings are treated as errors.
    'error',
    # Mixing threads and "fork()" is deprecated, but we need to test it anyway.
    'ignore:.*use of fork\(\) may lead to deadlocks in the child.*:DeprecationWarning',
    # Using "set_event_loop()" is deprecated, but no alternative is provided.
    "ignore:.*'asyncio.set_event_loop' is deprecated.*:DeprecationWarning",
]
testpaths = ["tests"]
markers = "meta"

[tool.black]
line-length = 160 # 设置每行的最大字符数（默认 88）
target-version = [
    "py39",
    "py310",
    "py311",
] # 指定 Python 目标版本（如 py38, py39, py310 等）
skip-string-normalization = false # 禁用字符串标准化（不强制双引号）
include = '\.pyi?$' # 格式化的文件类型（正则表达式）
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
''' # 排除的文件或目录（正则表达式）

[tool.mypy]
strict = true
pretty = true

[tool.ruff]
src = ["app", "sample", "tests"]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
line-length = 160

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.11.
target-version = "py311"

[tool.ruff.lint]
# See list of rules at: https://docs.astral.sh/ruff/rules/
select = ["F", "E", "W", "I", "B", "N", "D", "PT", "PYI", "RET", "RUF"]

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
    "D1", # Do not require documentation for tests.
]

[tool.ruff.lint.isort]
lines-between-types = 1
lines-after-imports = 2

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10
